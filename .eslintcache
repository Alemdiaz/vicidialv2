[{"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/index.js":"1","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/serviceWorker.js":"2","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/App.js":"3","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/context/LayoutContext.js":"4","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/context/UserContext.js":"5","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/themes/index.js":"6","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Layout/Layout.js":"7","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/error/Error.js":"8","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/login/Login.js":"9","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/themes/default.js":"10","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/login/styles.js":"11","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/charts/Charts.js":"12","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/charts/components/ApexLineChart.js":"13","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/charts/components/ApexHeatmap.js":"14","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/PageTitle/PageTitle.js":"15","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/PageTitle/styles.js":"16","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Widget/Widget.js":"17","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Wrappers/Wrappers.js":"18","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Widget/styles.js":"19","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/error/styles.js":"20","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Layout/styles.js":"21","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/maps/Maps.js":"22","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/tables/Tables.js":"23","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/icons/Icons.js":"24","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/notifications/Notifications.js":"25","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/Dashboard.js":"26","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/Sidebar.js":"27","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/typography/Typography.js":"28","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Header/Header.js":"29","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/notifications/styles.js":"30","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/components/Dot.js":"31","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Header/styles.js":"32","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"33","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Notification/Notification.js":"34","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/UserAvatar/UserAvatar.js":"35","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/components/SidebarLink/styles.js":"36","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/UserAvatar/styles.js":"37","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Notification/styles.js":"38","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/typography/styles.js":"39","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/styles.js":"40","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/mock.js":"41","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/styles.js":"42","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/components/BigStat/BigStat.js":"43","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/components/Table/Table.js":"44","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/components/BigStat/styles.js":"45","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/icons/styles.js":"46","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/maps/styles.js":"47"},{"size":869,"mtime":1618306617000,"results":"48","hashOfConfig":"49"},{"size":4948,"mtime":1618306617000,"results":"50","hashOfConfig":"49"},{"size":1711,"mtime":1618306617000,"results":"51","hashOfConfig":"49"},{"size":1392,"mtime":1618306617000,"results":"52","hashOfConfig":"49"},{"size":1977,"mtime":1618306617000,"results":"53","hashOfConfig":"49"},{"size":502,"mtime":1618306617000,"results":"54","hashOfConfig":"49"},{"size":4434,"mtime":1655409114000,"results":"55","hashOfConfig":"49"},{"size":1571,"mtime":1618306617000,"results":"56","hashOfConfig":"49"},{"size":8986,"mtime":1655485898184,"results":"57","hashOfConfig":"49"},{"size":2984,"mtime":1655416929000,"results":"58","hashOfConfig":"49"},{"size":3131,"mtime":1655417852000,"results":"59","hashOfConfig":"49"},{"size":5556,"mtime":1618306617000,"results":"60","hashOfConfig":"49"},{"size":1328,"mtime":1618306617000,"results":"61","hashOfConfig":"49"},{"size":1794,"mtime":1618306617000,"results":"62","hashOfConfig":"49"},{"size":427,"mtime":1655408318000,"results":"63","hashOfConfig":"49"},{"size":448,"mtime":1655408448000,"results":"64","hashOfConfig":"49"},{"size":2485,"mtime":1618306617000,"results":"65","hashOfConfig":"49"},{"size":3790,"mtime":1618306617000,"results":"66","hashOfConfig":"49"},{"size":969,"mtime":1618306617000,"results":"67","hashOfConfig":"49"},{"size":1334,"mtime":1618306617000,"results":"68","hashOfConfig":"49"},{"size":680,"mtime":1618306617000,"results":"69","hashOfConfig":"49"},{"size":971,"mtime":1618306617000,"results":"70","hashOfConfig":"49"},{"size":2082,"mtime":1618306617000,"results":"71","hashOfConfig":"49"},{"size":377833,"mtime":1655354501000,"results":"72","hashOfConfig":"49"},{"size":13480,"mtime":1655421980000,"results":"73","hashOfConfig":"49"},{"size":15677,"mtime":1655402895000,"results":"74","hashOfConfig":"49"},{"size":4539,"mtime":1655416727000,"results":"75","hashOfConfig":"49"},{"size":4689,"mtime":1655408819000,"results":"76","hashOfConfig":"49"},{"size":10250,"mtime":1655409879000,"results":"77","hashOfConfig":"49"},{"size":1858,"mtime":1618306617000,"results":"78","hashOfConfig":"49"},{"size":862,"mtime":1618306617000,"results":"79","hashOfConfig":"49"},{"size":3868,"mtime":1618306617000,"results":"80","hashOfConfig":"49"},{"size":4411,"mtime":1618306617000,"results":"81","hashOfConfig":"49"},{"size":3296,"mtime":1618306617000,"results":"82","hashOfConfig":"49"},{"size":593,"mtime":1618306617000,"results":"83","hashOfConfig":"49"},{"size":1412,"mtime":1618306617000,"results":"84","hashOfConfig":"49"},{"size":276,"mtime":1618306617000,"results":"85","hashOfConfig":"49"},{"size":993,"mtime":1618306617000,"results":"86","hashOfConfig":"49"},{"size":374,"mtime":1618306617000,"results":"87","hashOfConfig":"49"},{"size":1304,"mtime":1618306617000,"results":"88","hashOfConfig":"49"},{"size":4105,"mtime":1618306617000,"results":"89","hashOfConfig":"49"},{"size":2870,"mtime":1618306617000,"results":"90","hashOfConfig":"49"},{"size":4039,"mtime":1618306617000,"results":"91","hashOfConfig":"49"},{"size":1274,"mtime":1618306617000,"results":"92","hashOfConfig":"49"},{"size":1027,"mtime":1618306617000,"results":"93","hashOfConfig":"49"},{"size":780,"mtime":1618306617000,"results":"94","hashOfConfig":"49"},{"size":171,"mtime":1618306617000,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yb9zsb",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/index.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/serviceWorker.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/App.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/context/LayoutContext.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/context/UserContext.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/themes/index.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Layout/Layout.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/error/Error.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/login/Login.js",["195"],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/themes/default.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/login/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/charts/Charts.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/charts/components/ApexLineChart.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/charts/components/ApexHeatmap.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/PageTitle/PageTitle.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/PageTitle/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Widget/Widget.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Wrappers/Wrappers.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Widget/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/error/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Layout/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/maps/Maps.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/tables/Tables.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/icons/Icons.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/notifications/Notifications.js",["196","197","198","199","200","201","202","203","204","205","206"],"import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Configuraciones\" />\n      {/* <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          <Grid item xs={4}>\n          <Widget title=\"Layout Options\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Usage\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <div className={classes.codeContainer}>\n              <SyntaxHighlighter\n                className={classes.codeComponent}\n                language=\"javascript\"\n                style={docco}\n              >{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</SyntaxHighlighter>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </div>\n          </Widget>\n            </Grid>\n          </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid> */}\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/Dashboard.js",["207","208","209","210"],"//NETLIFE - RNO -2022JUN16\n\nimport React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"CSI R1\", value: 400, color: \"primary\" },\n  { name: \"CSI R2\", value: 300, color: \"secondary\" },\n  { name: \"CEAC R1\", value: 300, color: \"warning\" },\n  { name: \"CEAC R2\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n    {/* netlife */}\n      <PageTitle title=\"Vista Principal\" /* button={<Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n        Latest Reports\n    </Button>}  *//>\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Agentes disponibles\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                300\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  In-Live\n                </Typography>\n                <Typography size=\"md\">190</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Off-Live\n                </Typography>\n                <Typography size=\"md\">110</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Agentes en llamadas\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  R1\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  R2\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Región 1\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Región 2\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Llamadas por ciudad\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                Guayaquil\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                Quito\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                Cuenca\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Llamadas por área\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Campañas\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Ciclo 1\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Ciclo 2\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Ciclo 3 \n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Día</MenuItem>\n                  <MenuItem value=\"weekly\">Mes</MenuItem>\n                  <MenuItem value=\"monthly\">Año</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {/* {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))} */}\n       {/*  <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid> */}\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/Sidebar.js",["211","212","213","214","215","216","217","218"],"// menu lateral de la app\nimport React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\n\n//cambiar iconos\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  BuildRounded as ConstructionIcon,\n  AssessmentRounded as ReportIcon\n  \n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components --netlife\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Home\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  {\n    id: 1,\n    label: \"Reportes\",\n    link: \"/app/typography\",\n    icon: <ReportIcon/>,\n  },\n  // { id: 2, label: \"Reportes\", link: \"/app/tables\", icon: <TableIcon /> },\n  {\n    id: 3,\n    label: \"Configuraciones\",\n    link: \"/app/notifications\",\n    icon: <ConstructionIcon/>,\n  },\n  { id: 5, type: \"divider\" ,icon: <ConstructionIcon/>},\n  //netlife\n  // {\n  //   id: 4,\n  //   label: \"UI Elements\",\n  //   link: \"/app/ui\",\n  //   icon: <UIElementsIcon />,\n  //   children: [\n  //     { label: \"Icons\", link: \"/app/ui/icons\" },\n  //     { label: \"Charts\", link: \"/app/ui/charts\" },\n  //     { label: \"Maps\", link: \"/app/ui/maps\" },\n  //   ],\n  // },\n  //{ id: 5, type: \"divider\" },\n  // { id: 6, type: \"title\", label: \"HELP\" },\n  // { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\n  // { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\n  // { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\n  // { id: 10, type: \"divider\" },\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\n  // {\n  //   id: 12,\n  //   label: \"My recent\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\n  // },\n  // {\n  //   id: 13,\n  //   label: \"Starred\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\n  // },\n  // {\n  //   id: 14,\n  //   label: \"Background\",\n  //   link: \"\",\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\n  // },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/typography/Typography.js",["219","220"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\n\nexport default function TypographyPage() {\n  var classes = useStyles();\n\n  return (\n    <>\n      <PageTitle title=\"Reportes\"  />\n      <Grid container spacing={3}>\n        <Grid item xs={2} md={4}>\n          <Widget title=\"Calificación de clientes\" disableWidgetMenu>\n          {/* <img src=\"https://www.netlife.ec/wp-content/uploads/2019/09/logo_conectaNetlife.png\"/> */}\n            {/* <div className={classes.dashedBorder}>\n              <Typography variant=\"h1\" className={classes.text}>\n                h1. Heading\n              </Typography>\n              <Typography variant=\"h2\" className={classes.text}>\n                h2. Heading\n              </Typography>\n              <Typography variant=\"h3\" className={classes.text}>\n                h3. Heading\n              </Typography>\n              <Typography variant=\"h4\" className={classes.text}>\n                h4. Heading\n              </Typography>\n              <Typography variant=\"h5\" className={classes.text}>\n                h5. Heading\n              </Typography>\n              <Typography variant=\"h6\">h6. Heading</Typography>\n            </div> */}\n          </Widget>\n        </Grid>\n        <Grid item xs={2} md={4}>\n          <Widget title=\"Reporte de agentes\" disableWidgetMenu>\n            {/* <div className={classes.dashedBorder}>\n              <Typography variant=\"h1\" color=\"primary\" className={classes.text}>\n                h1. Heading\n              </Typography>\n              <Typography variant=\"h2\" color=\"success\" className={classes.text}>\n                h2. Heading\n              </Typography>\n              <Typography\n                variant=\"h3\"\n                color=\"secondary\"\n                className={classes.text}\n              >\n                h3. Heading\n              </Typography>\n              <Typography variant=\"h4\" color=\"warning\" className={classes.text}>\n                h4. Heading\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                color=\"primary\"\n                colorBrightness=\"light\"\n                className={classes.text}\n              >\n                h5. Heading\n              </Typography>\n              <Typography variant=\"h6\" color=\"info\">\n                h6. Heading\n              </Typography>\n            </div> */}\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Scripts usados con frecuencia\" disableWidgetMenu>\n            {/* <div className={classes.dashedBorder}>\n              <Typography className={classes.text}>Basic text</Typography>\n              <Typography className={classes.text} weight=\"light\">\n                Basic light text\n              </Typography>\n              <Typography className={classes.text} weight=\"medium\">\n                Basic medium text\n              </Typography>\n              <Typography className={classes.text} weight=\"bold\">\n                Basic bold text\n              </Typography>\n              <Typography className={classes.text}>\n                BASIC UPPERCASE TEXT\n              </Typography>\n              <Typography className={classes.text}>\n                basic lowercase text\n              </Typography>\n              <Typography className={classes.text}>\n                Basic Capitalized Text\n              </Typography>\n              <Typography>\n                <i>Basic Cursive Text</i>\n              </Typography>\n            </div> */}\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Llamadas entrantes y salientes\" disableWidgetMenu>\n            {/* <div className={classes.dashedBorder}>\n              <Typography className={classes.text} size=\"sm\">\n                Heading Typography SM Font Size\n              </Typography>\n              <Typography className={classes.text}>\n                Heading Typography Regular Font Size\n              </Typography>\n              <Typography className={classes.text} size=\"md\">\n                Heading Typography MD Font Size\n              </Typography>\n              <Typography className={classes.text} size=\"xl\">\n                Heading Typography XL Font Size\n              </Typography>\n              <Typography className={classes.text} size=\"xxl\">\n                Heading Typography XXL Font Size\n              </Typography>\n            </div> */}\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Header/Header.js",["221","222","223","224","225","226","227"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  //Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\n//netlife\n// import { Badge, Typography, Button } from \"../Wrappers\";\nimport { Badge, Typography } from \"../Wrappers\";\n\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Netlife - Megadatos\n        </Typography>\n        <div className={classes.grow} />\n        {/*netlife <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Buscar...\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        {/* netlife: menu principal */}\n        {/* <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n      {/*   <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              Agente - Ricardo Noboa\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://netlife.ec\"\n            >\n              Netlife - Megadatos\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/notifications/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/components/Dot.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Header/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Notification/Notification.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/UserAvatar/UserAvatar.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/UserAvatar/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Notification/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/typography/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/components/Sidebar/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/mock.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/components/BigStat/BigStat.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/components/Table/Table.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/dashboard/components/BigStat/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/icons/styles.js",[],"/home/telefonia/Desktop/NETLIFE-VICIDIAL/src/pages/maps/styles.js",[],{"ruleId":"228","severity":1,"message":"229","line":8,"column":3,"nodeType":"230","messageId":"231","endLine":8,"endColumn":6},{"ruleId":"228","severity":1,"message":"232","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"233","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":24},{"ruleId":"228","severity":1,"message":"234","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":25},{"ruleId":"228","severity":1,"message":"235","line":6,"column":10,"nodeType":"230","messageId":"231","endLine":6,"endColumn":15},{"ruleId":"228","severity":1,"message":"236","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":18},{"ruleId":"228","severity":1,"message":"237","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":14},{"ruleId":"228","severity":1,"message":"238","line":17,"column":10,"nodeType":"230","messageId":"231","endLine":17,"endColumn":20},{"ruleId":"228","severity":1,"message":"239","line":17,"column":22,"nodeType":"230","messageId":"231","endLine":17,"endColumn":28},{"ruleId":"228","severity":1,"message":"240","line":340,"column":12,"nodeType":"230","messageId":"231","endLine":340,"endColumn":34},{"ruleId":"228","severity":1,"message":"241","line":384,"column":12,"nodeType":"230","messageId":"231","endLine":384,"endColumn":38},{"ruleId":"228","severity":1,"message":"242","line":390,"column":10,"nodeType":"230","messageId":"231","endLine":390,"endColumn":21},{"ruleId":"228","severity":1,"message":"239","line":10,"column":3,"nodeType":"230","messageId":"231","endLine":10,"endColumn":9},{"ruleId":"228","severity":1,"message":"243","line":31,"column":8,"nodeType":"230","messageId":"231","endLine":31,"endColumn":12},{"ruleId":"228","severity":1,"message":"244","line":36,"column":8,"nodeType":"230","messageId":"231","endLine":36,"endColumn":13},{"ruleId":"228","severity":1,"message":"245","line":37,"column":8,"nodeType":"230","messageId":"231","endLine":37,"endColumn":15},{"ruleId":"228","severity":1,"message":"246","line":8,"column":24,"nodeType":"230","messageId":"231","endLine":8,"endColumn":41},{"ruleId":"228","severity":1,"message":"247","line":9,"column":17,"nodeType":"230","messageId":"231","endLine":9,"endColumn":31},{"ruleId":"228","severity":1,"message":"248","line":10,"column":17,"nodeType":"230","messageId":"231","endLine":10,"endColumn":31},{"ruleId":"228","severity":1,"message":"249","line":11,"column":16,"nodeType":"230","messageId":"231","endLine":11,"endColumn":25},{"ruleId":"228","severity":1,"message":"250","line":12,"column":21,"nodeType":"230","messageId":"231","endLine":12,"endColumn":32},{"ruleId":"228","severity":1,"message":"251","line":13,"column":19,"nodeType":"230","messageId":"231","endLine":13,"endColumn":30},{"ruleId":"228","severity":1,"message":"252","line":14,"column":18,"nodeType":"230","messageId":"231","endLine":14,"endColumn":25},{"ruleId":"228","severity":1,"message":"253","line":29,"column":8,"nodeType":"230","messageId":"231","endLine":29,"endColumn":11},{"ruleId":"228","severity":1,"message":"238","line":10,"column":10,"nodeType":"230","messageId":"231","endLine":10,"endColumn":20},{"ruleId":"228","severity":1,"message":"254","line":13,"column":7,"nodeType":"230","messageId":"231","endLine":13,"endColumn":14},{"ruleId":"228","severity":1,"message":"255","line":14,"column":18,"nodeType":"230","messageId":"231","endLine":14,"endColumn":26},{"ruleId":"228","severity":1,"message":"246","line":15,"column":24,"nodeType":"230","messageId":"231","endLine":15,"endColumn":41},{"ruleId":"228","severity":1,"message":"256","line":29,"column":10,"nodeType":"230","messageId":"231","endLine":29,"endColumn":15},{"ruleId":"228","severity":1,"message":"257","line":105,"column":8,"nodeType":"230","messageId":"231","endLine":105,"endColumn":21},{"ruleId":"228","severity":1,"message":"258","line":105,"column":23,"nodeType":"230","messageId":"231","endLine":105,"endColumn":39},{"ruleId":"228","severity":1,"message":"259","line":107,"column":8,"nodeType":"230","messageId":"231","endLine":107,"endColumn":29},{"ruleId":"228","severity":1,"message":"260","line":107,"column":31,"nodeType":"230","messageId":"231","endLine":107,"endColumn":55},"no-unused-vars","'Tab' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'ToastContainer' is defined but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'classnames' is defined but never used.","'Widget' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'handleNotificationCall' is defined but never used.","'changeNotificationPosition' is defined but never used.","'CloseButton' is defined but never used.","'mock' is defined but never used.","'Table' is defined but never used.","'BigStat' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'classes' is assigned a value but never used.","'MailIcon' is defined but never used.","'Badge' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used."]